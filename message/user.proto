syntax = "proto3";

package message;

import "google/api/annotations.proto";
import "message/user_basic.proto";

option go_package = "api/client/message;climsg";

// ---------- Data structures ----------

// User data
message UserProto {
  UserBasicProto basic = 1; // Basic information
}

// ---------- Service ----------
// User service
service UserTCPService {
  // Login
  rpc Login (CSLogin) returns (SCLogin) {
    option (google.api.http) = {
      post: "/user/login"
      body: "*"
    };
  };

}

// ---------- Push messages ----------

// Push: Latest user data
message SCPushSyncUser {
  UserProto user = 1; // Player data
}

// ---------- Request Response messages ----------

// Request: Login
message CSLogin {
  bool reconnect = 1; // Whether it is a reconnection. When the client discovers that the network is disconnected during the online period and executes automatic reconnection, it is true.
}

// Response: Login
message SCLogin {
  Code code = 1; // Status code
  enum Code {
    ErrServer = 0; // Please try again later
    Success = 1; // Success
    ErrAccountIdNotExist = 2; // Account does not exist
    ErrAccountBanned = 3; // Account banned
  }

  int64 server_time = 2; // Server timestamp, accurate to seconds

  UserProto user = 3; // Player data
  bool newborn = 4; // Whether the player is newborn
}
